@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model bloggie.web.Models.ViewModels.BlogDetailsViewModel


@{
    ViewBag.Title = Model.PageTitle;
    Layout = "_Layout";
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            <h1 class="mb-3">@Model.Heading</h1>
            <div class="d-flex justify-content-between mb-3">
                <span class="text-secondary">@Model.Author</span>
                <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
            </div>
            
            <div class="mb-3">
                @if (SignInManager.IsSignedIn(User))
                {
                    if (Model.Liked)
                    {
                        <a id="btnLike" style="cursor: pointer;">
                            <i class="bi bi-hand-thumbs-up-fill"></i>
                        </a>
                    }
                    else
                    {
                        <a id="btnLike" style="cursor: pointer;">
                            <i class="bi bi-hand-thumbs-up"></i>
                        </a>
                    }
                }
                <span id="likesCount">@Model.LikesCount</span> Likes
            </div>
            
            <div class="mb-3 d-flex">
                @foreach(var tag in Model.Tags)
                {
                    <span class="badge bg-secondary me-1">@tag.Name</span>
                }
            </div>
            <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3" alt="@Model.Heading"/>
            <div class="mb-3 blog-details-content">
                @Html.Raw(Model.Content)
            </div>
            
            <div class="card">
                <div class="card-header">
                    <h5>Comments</h5>
                    
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <form method="post">
                            <div class="mb-3">
                                <label class="form-label">Comment Description</label>
                                <input type="text" class="form-control" asp-for="CurrentComment"/>
                            </div>
                            <div class="mb-3">
                                <button type="submit" class="btn btn-dark">Submit</button>
                                <input type="hidden" asp-for="Id"/>
                                <input type="hidden" asp-for="UrlHandle"/>
                            </div>
                        </form>
                    }
                </div>
                <div class="card-body">
                    @if (Model.Comments.Any())
                    {
                        @foreach(var comment in Model.Comments)
                        {
                            <div class="card mb-3">
                                <div class="card-body">
                                    <div>
                                        @comment.Description
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span class="text-secondary">@comment.Username</span>
                                        <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        const btnLike = document.getElementById('btnLike');
        const likesCount = document.getElementById('likesCount');
        
        async function getLikesCount() {
            await fetch('/api/BlogPostLike/@Model.Id/LikesCount', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            }).then(data => data.json())
            .then(result => likesCount.innerHTML = result);
                
        }
        
        async function addLike() {
            await fetch('/api/BlogPostLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({
                    blogPostId: '@Model.Id',
                    userId: '@UserManager.GetUserId(User)'
                })
            }).then(() => {
                btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLike.removeEventListener('click', addLike);
                getLikesCount();
                btnLike.addEventListener('click', removeLike);
            });
        }
        
        async function removeLike() {
            await fetch('/api/BlogPostLike/Remove', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({
                    blogPostId: '@Model.Id',
                    userId: '@UserManager.GetUserId(User)'
                })
            }).then(() => {
                btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up"></i>';
                btnLike.removeEventListener('click', removeLike);
                getLikesCount();
                btnLike.addEventListener('click', addLike);
            });
                
        }
        
        async function checkIfLiked() {
            btnLike.removeEventListener('click', checkIfLiked);
            if (btnLike.innerHTML.includes('bi-hand-thumbs-up-fill')) {
                btnLike.addEventListener('click', removeLike)
                await removeLike();
            } else {
                btnLike.addEventListener('click', addLike)
                await addLike();
            }
        }
        
        btnLike.addEventListener('click', checkIfLiked);
        
    </script>
}
